im-config for Debian                     Osamu Aoki <osamu@debian.org>

=======================================================================
!	Basic design of im-config
=======================================================================

1. It activates the most reasonable installed input method automatically 
   without any action by users or by the system administrator.

2. It provides a reasonably simple GUI configuration menu which is off
   by the default.  Menu selected user configuration can override the 
   system default.  Menu should normally show only available input method
   on the system.

3. Its configuration files are intuitive and its contents can be manually 
   overridden easily as a POSIX shell hook script.

4. Menu configuration system is smart enough to detect manual changes of
   configuration by editor and honors such changes.

5. POSIX shell script is internationalized via gettext.sh (TODO)

=======================================================================
!	How To Configure Input Method with im-config
=======================================================================

If you wish to override system default, 

For user configuration, execute as:
  $ im-config

For system wide default, execute as:
  $ sudo editor /etc/default/im-config
or
  $ sudo im-config

Under GNOME2, you can do the same by enabling GUI menu by right-clicking menu
under GNOME -> "Edit Menu" and check menu entry to be activated.  Then you can
use this GUI menu for user configuration as  "System" -> "Preferences" -> 
"Input Method" which runs "im-config". 

(Under current GNOME3 in testing, this does not work.)

=========================================================================
!	Quick Guide to Setup Input Method
=========================================================================

* IBus (GTK+2, GTK+3, Qt4, Clutter, EMACS) -- this is most versatile
  - Install all useful IBus packages (use "l" under aptitude to find them.)
    - Core ibus input package:                ibus
    - Support package for each UI environment
      - GTK+2 IM module:                      ibus-gtk
      - GTK+3 IM module:                      ibus-gtk3
      - Qt4 IM module:                        ibus-qt4
      - Clutter IM module:                    ibus-clutter
      - EMACS (optional optimization):        ibus-el
      [Note]
        These are optional.  (Otherwise, xim is used)
        Installing them will improve user experience.
        Both ibus-gtk and ibus-gtk3 are required to be installed to activate 
        GTK IM module with im-config.
    - Support package for each IM engine client
      - Japanese, MOZC (best):                ibus-mozc
      - Japanese, Anthy (good):               ibus-anthy
      - Japanese, SKK (EMACS style):          ibus-skk
      - Korean language:                      ibus-hangul
      - Traditional Chinese:                  ibus-chewing
      - Simplified Chinese:                   ibus-pinyin
      - Simplified Chinese (SUN):             ibus-sunpinyin
      - Simplified Chinese (Google):          ibus-googlepinyin
      - Vietnamese:                           ibus-unikey
      - Many table based input method:        ibus-table*
  - If other input method packages (fcitx, uim, ...) are installed,
    select ibus by executing im-config from a terminal window.
    (Usually not needed since this is default.)
  - Configure ibus by adding your desired input method engine.
    This configuration may be accessed by right clicking small keyboard icon
    on the top right corner.  For example, I would chose MOZC for Japanese.
  - Relogin to the user account to refresh X session.

* fcitx (GTK+2, GTK+3, Qt4) -- mostly for Chinese
  [TODO -- Add tutorial] This is new and very active tool chain.

* uim (GTK+2, GTK+3, Qt4) -- mostly for Japanese
  - Install all useful uim packages (use "l" under aptitude to find them.)
    uim, uim-anthy (Japanese), uim-gtk2.0, uim-gtk3, uim-qt, uim-xim
  - "System" -> "Preferences" -> "Input Method" and select
    "universal input method (uim)"
    This will enable first found status display dialogue from the following.
      - "uim-toolbar-gtk-systray"     for systray (GTK+).
      - "uim-toolbar-gtk"             for toolbar (GTK+).
      - "uim-toolbar-qt"              for toolbar (Qt).
  - Relogin to user account to refresh X session.

  FYI: (With the method written in uim package, you can use toolbar under 
        non-gnome environment)

* SCIM -- deprecated for wheezy, use ibus instead.
  - Install all useful scim packages (use "l" under aptitude to find them.)
    scim, scim-anthy (Japanese), ...
  - "System" -> "Preferences" -> "Input Method" and select 
    "Smart Common Input Method (SCIM)"
  - Relogin to user account to refresh X session.

* Force to disable Input Method.
  - select "none" from menu in the im-config command.

* REMOVE im-config configuration
  - select "REMOVE" from menu in the im-config command.

=========================================================================
!	Trouble Shoot for Input Method
=========================================================================

If you have any problem, see the first part of ~/.xsession-errors .

Somehow, relogin may cause unknown errors.  When you check problem with this
relogin, please check to see the reboot has the same issue.

If you created manually edited /etc/X11/xinit/ or ~/.xinputrc, you need to 
remove them first to use im-config.  im-config will not overwrite such files.

Please file your bug report with the reportbug program against im-config
package.

=======================================================================
!	How im-config works
=======================================================================

* X start-up codes

When X Window System is started, it parses hook script files in
/etc/X11/Xsesion.d/ directory.  A hook script,
/etc/X11/Xsesion.d/80im-config_launch, is placed by the im-config package.

If the input method related variables such as "$XMODIFIERS", "$GTK_IM_MODULE",
"$QT_IM_MODULE", "$QT4_IM_MODULE", and "$CLUTTER_IM_MODULE" are set by other
program before 80im-config_launch, 80im-config_launch will skip setting input
method to avoid the conflict with user configurations.

If user's configuration file, $HOME/.xinputrc, exists, this
80im-config_launch hook script sources user's configuration file.

Otherwise, this 80im-config_launch hook script sources the system wide
configuration file, /etc/X11/xinit/xinputrc.

* Configuration command: im-config

The system wide configuration file, /etc/X11/xinit/xinputrc, has
essentially the following content as installed:

----
set_im default
----

Here, set_im is shell function provided by this im-config system to source the
corresponding configuration script 00_default.im in /usr/share/im-config/data.

Since /etc/default/im-config usually defines IM_CONFIG_DEFAULT_MODE=auto, 
00_default.im sources 01_auto.im to activate the most versatile input method 
existing on your system.

When a normal user executes the im-config command, it generates user's
configuration file.  For example, if you select IBus input method,
generated user's configuration file, $HOME/.xinputrc, as the following.

----
set_im ibus
----

Here, set_im sources the corresponding configuration script 30_ibus.im in
/usr/share/im-config/data.

When the root executes the im-config command, it updates the system wide
configuration file, /etc/X11/xinit/xinputrc, instead.

The leading numbers for files in /usr/share/im-config/data have special meaning
as follows:

m   00-09: Input Method choice mode       (default/auto/cjkv/none)
m A 10-49: Input Method supporting multiple languages.(auto ready)
m A 50-79: Input Method supporting limited languages. (auto ready)
m   80-89: Input Method (deprecated, not for auto)
    90-99: For internal program use
^ ^
| |
| +------  IM configuration in A-marked range is used as the automatic
|          selection candidates for auto and cjkv mode in this order, 
|          if package_auto from matching *.dsc returns TRUE.
|
+--------  IM configuration in m-marked range shows up on menu, 
           if package_menu from matching *.dsc returns TRUE.

The im-config maintainer decides the assignment of these leading
numbers.

These configuration files are POSIX shell script.  Please avoid using
BASH features.  When these *.im files are sourced by the hook script
/etc/X11/Xsesion.d/80im-config_launch.  It uses run_im function in which
matching *.im are sourced.

After sourcing the *.im, the im-config hook script,
/etc/X11/Xsession.d/80im-config_launch exports "$XMODIFIERS",
"$GTK_IM_MODULE", "$QT_IM_MODULE", "$QT4_IM_MODULE", and
"$CLUTTER_IM_MODULE".

After configuration, if package_full echo "false" from matching *.dsc,
a dialogue is displayed for package selection guide.

Some sanity checks are implemented when you use im-config to change
configuration.  For example, when a user makes changes to these
configuration files without using im-config, im-config will detect it
using a md5sum hush value embedded in the shell comment and will not
change its content.  In order to overwrite such modified configuration
files by im-config, you have to erase them first.

=======================================================================
!	Custom configuration
=======================================================================

If you wish to create some custom configuration beyond what the im-config
can do, you can do so by placing your custom input method configuration in
HOME/.xinputrc or /etc/X11/xinit/xinputrc.  When you do this, *.im files
in /usr/share/im-config/data should give you good idea how these can be
done.  cjkv.im tells how input method can be customized for each locale.

Following variables are automatically exported to X programs by the 
im-config hook script: /etc/X11/Xsession.d/80im-config_launch
---
 $XMODIFIERS
 $GTK_IM_MODULE
 $QT_IM_MODULE
 $QT4_IM_MODULE
 $CLUTTER_IM_MODULE
---

=======================================================================
!	New input method support
=======================================================================

If you are interested to add a new input method support, please send me a start
up code as *.im and its matching *.dsc for /usr/share/im-config/data. 

*.dsc files contain the definition of following variables and functions:
Variables:
  IM_CONFIG_DSC Short description of the im-config configuration.
  IM_CONFIG_DOC Long description of the im-config configuration.
Functions:
  package_menu  return true if enough packages exist for menu listing   00-89
  package_auto  return true if enough packages exist for auto selection 10-79

Please note these are different from im-switch configuration files.

 -- Osamu Aoki <osamu@debian.org>,  Wed, 30 Nov 2011 13:20:48 +0000
